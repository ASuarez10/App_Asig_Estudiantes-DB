CREATE OR REPLACE PACKAGE SELECTION_PROCESS_PACKAGE AS

	FUNCTION GetCandidatesData RETURN SYS_REFCURSOR;
	FUNCTION GetCriteriaData RETURN SYS_REFCURSOR;
	FUNCTION GetCriteriaConfigurationData(p_id_criterion VARCHAR2) RETURN SYS_REFCURSOR;
	FUNCTION GetHeadquarterAndCareerData(p_id_headquarter_career NUMBER) RETURN VARCHAR2;
	FUNCTION GetEducationTypeData(p_id_education NUMBER) RETURN VARCHAR2;
	PROCEDURE ExecuteSelectionProcess;
	
END SELECTION_PROCESS_PACKAGE;

CREATE OR REPLACE PACKAGE BODY SELECTION_PROCESS_PACKAGE AS 

	--Function to get the candidates data and return it.
	FUNCTION GetCandidatesData RETURN SYS_REFCURSOR IS
		CANDIDATES_CURSOR SYS_REFCURSOR;
	BEGIN 
		OPEN CANDIDATES_CURSOR FOR
		SELECT ID_CANDIDATE, SEX, CITY, ESTATE, AGE, ICFES_GENERAL
		FROM CANDIDATES ;
		RETURN CANDIDATES_CURSOR;
	END GetCandidatesData;

	--Function to get the criteria data and return it.
	FUNCTION GetCriteriaData RETURN SYS_REFCURSOR IS
		CRITERIA_CURSOR SYS_REFCURSOR;
	BEGIN 
		OPEN CRITERIA_CURSOR FOR
		SELECT C.ID_CRITERION,C.VALUE FROM CRITERIA C;
		RETURN CRITERIA_CURSOR;
	END GetCriteriaData;

	--Function to get the criteria configuration data and return it.
	FUNCTION GetCriteriaConfigurationData(p_id_criterion VARCHAR2) RETURN SYS_REFCURSOR IS
		CONF_CURSOR SYS_REFCURSOR;
	BEGIN
		OPEN CONF_CURSOR FOR
		SELECT CC.ID_CRITERION, CC.VALUE, CC.PRIORITY, CC.PERCENTAGE, CC.COMPARATOR  FROM CRITERIA_CONFIGURATION CC
		WHERE CC.ID_CRITERION = p_id_criterion;
		RETURN CONF_CURSOR;
	END GetCriteriaConfigurationData;

	--Function to get the headquarters and careers in a string
	FUNCTION GetHeadquarterAndCareerData(p_id_headquarter_career NUMBER) RETURN VARCHAR2 IS 
		V_HEADQUARTER_CITY VARCHAR2(50);
		V_CAREER_NAME VARCHAR2(50);
	BEGIN
		SELECT h.HEADQUARTER_CITY, c.CAREER_NAME
		INTO V_HEADQUARTER_CITY, V_CAREER_NAME
		FROM HEADQUARTERS_CAREERS hc 
		INNER JOIN HEADQUARTERS h ON hc.ID_HEADQUARTER = h.ID_HEADQUARTER
		INNER JOIN CAREERS c ON hc.ID_CAREER = c.ID_CAREER
		WHERE hc.ID_HEADQUARTER_CAREER = p_id_headquarter_career;
	
		RETURN '' || V_HEADQUARTER_CITY || V_CAREER_NAME;
	
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			RETURN 'No data found for the id provided';
	END GetHeadquarterAndCareerData;

	--Function to get the education type in a string
	FUNCTION GetEducationTypeData(p_id_education NUMBER) RETURN VARCHAR2 IS
		V_EDUCATION_NAME VARCHAR2(50);
	BEGIN 
		SELECT et.EDUCATION_TYPE_NAME
		INTO V_EDUCATION_NAME
		FROM EDUCATION_TYPES et
		WHERE et.EDUCATION_TYPE_NAME = p_id_education;
	
		RETURN V_EDUCATION_NAME;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			RETURN 'No data found for the id provided';
	END GetEducationTypeData;

	--Procedure that carries out the selection process
	PROCEDURE ExecuteSelectionProcess IS
	
		CANDIDATES_CURSOR SYS_REFCURSOR;
		CRITERIA_CURSOR SYS_REFCURSOR;
		CONF_CURSOR SYS_REFCURSOR;
	
		V_CANDIDATE_ID VARCHAR2(11);
		V_CANDIDATE_SEX VARCHAR2(15);
	    V_CANDIDATE_CITY VARCHAR2(50);
	    V_CANDIDATE_ESTATE VARCHAR2(50);
	    V_CANDIDATE_AGE NUMBER;
	    V_CANDIDATE_ICFES NUMBER;
	   
	   	V_HEADQUARTER_CAREER VARCHAR2(50);
	   	V_HEADQUARTER VARCHAR2(50);
	   	V_CAREER VARCHAR2(50);
	   
	   	V_EDUCATION VARCHAR2(50)
	   	
	   	V_CRITERIA_ID VARCHAR2(10);
	   	V_CRITERIA_VALUE VARCHAR2(100);
	   	
	   	V_CONF_ID VARCHAR2(10);
	   	V_CONF_VALUE VARCHAR2(50);
	   	V_CONF_PRIORITY VARCHAR2(10);
	   	V_CONF_PERCENTAGE NUMBER;
	   	V_CONF_COMPARATOR VARCHAR2(30);
	   
		v_percentage NUMBER := 0;
       
      BEGIN
	       
		CANDIDATES_CURSOR := GetCandidatesData;
		
		LOOP
			
			FETCH CANDIDATES_CURSOR INTO V_CANDIDATE_ID,V_CANDIDATE_SEX,V_CANDIDATE_CITY,V_CANDIDATE_ESTATE,V_CANDIDATE_AGE,V_CANDIDATE_ICFES;
			EXIT WHEN CANDIDATES_CURSOR%NOTFOUND;
			
			CRITERIA_CURSOR := GetCriteriaData;
		
			LOOP 
				FETCH CRITERIA_CURSOR INTO V_CRITERIA_ID,V_CRITERIA_VALUE;
				EXIT WHEN CRITERIA_CURSOR%NOTFOUND;
			
				IF (V_CRITERIA_ID = '1') THEN
					
				END IF;
			
			END LOOP;
			
		
			CLOSE CRITERIA_CURSOR;
			
		END LOOP;
		
	
		CLOSE CANDIDATES_CURSOR;
	
	END ExecuteSelectionProcess;


END SELECTION_PROCESS_PACKAGE;--FIN DEL PAQUETE


--BEGIN
--	SELECTION_PROCESS_PACKAGE.GETCANDIDATESDATA;
--END;

--Borrado
--DROP PACKAGE SELECTION_PROCESS_PACKAGE;
--DROP PACKAGE BODY SELECTION_PROCESS_PACKAGE;

